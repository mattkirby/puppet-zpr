#!/usr/bin/env <% if @lsbdistcodename == 'squeeze' -%>python<% else -%>python2<% end -%>

import re
import os
import sys
from subprocess import call


def check_command():
    source_command = os.environ.get('zpr_rsync_cmd')
    if not source_command:
        sys.exit(1)
    ssh_command = os.environ['SSH_ORIGINAL_COMMAND']
    commands_dir = '<%= @permitted_commands %>'
    commands_list = os.listdir(commands_dir)
    command_title = source_command.split('/')[-1]
    command_path = [commands_dir, command_title]

    static_command = open('/'.join(command_path)).read().strip()

    if not source_command in static_command:
        sys.exit(2)

    allowed = [
        'sudo rsync --server --sender',
        r'(<%= @check_for %>)',
    ]
    c_split = str(ssh_command).split()

    if not allowed[0] == ' '.join(c_split[:4]):
        sys.exit(3)

    for i in c_split[6:]:
        if re.compile(allowed[1]).findall(i):
            sys.exit(4)

    try:
        call(ssh_command, shell=True)
    except:
        sys.exit(5)

if __name__ == '__main__':
    check_command()
